import { Box, Button, Container, Typography } from "@mui/material";
import Head from "next/head";
import { DataGrid, GridColDef, GridCellParams } from "@mui/x-data-grid";
import { useState } from "react";
import { randomUserName } from '@mui/x-data-grid-generator';

const rowsInitial = [
	{
		id: 1,
		name: "Capitán América",
		age: 35,
		power: "Super fuerza",
	},
	{
		id: 2,
		name: "Iron man",
		age: 40,
		power: "Super inteligencia",
	},
	{
		id: 3,
		name: "Thor",
		age: 1000,
		power: "Control del trueno",
	},
	{
		id: 4,
		name: "Hulk",
		age: 40,
		power: "Super fuerza",
	},
	{
		id: 5,
		name: "Spiderman",
		age: 25,
		power: "Sentido arácnido",
	},
	{
		id: 6,
		name: "Black Widow",
		age: 35,
		power: "Espionaje",

	}
]

const columns: GridColDef[] = [
	{
		field: "name",
		headerName: "Nombre",
		sortable: true,
		renderCell: (params: GridCellParams) => <>{params.value}</>
	},
	{
		field: "age",
		headerName: "Edad",
		sortable: true,
		renderCell: (params: GridCellParams) => <>{params.value}</>
	},
	{
		field: "power",
		headerName: "Poder",
		sortable: true,
		editable: true,
		width: 200,
		renderCell: (params: GridCellParams) => <>{params.value}</>
	}
]


export default function Home() {

	const [rows, setRows] = useState(rowsInitial)

	const handleDeleteRow = () => {
		if (rows.length === 0) {
			return;
		}
		// Vamos a eliminar el ultimo elemento del array
		setRows((prevRows) => prevRows.slice(0, - 1))
	}

	// Funcion para agregar un row

	return (
		<>
			<Head>
				<title>Data Grid MUI</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
		<Container>
			<Box
				sx={{
					my: 4,
					display: "flex",
					flexDirection: "column",
					justifyContent: "center",
					alignItems: "center",
				}}
			>
				<Typography variant="h4" component="h1" sx={{mb: 2}}>
					Data Grid MUI
					</Typography>
					<Button variant="contained" color="primary" onClick={handleDeleteRow}>
						Delete Row
					</Button>
					<Container maxWidth="md" sx={{paddingTop: "20px"}}>
						<DataGrid
							rows={rows}
							columns={columns}
							disableRowSelectionOnClick
							disableColumnSelector
							// disableColumnFilter={true}
							// disableColumnMenu
							checkboxSelection
							pageSizeOptions={[2, 4, 6]}
							sortingOrder={["asc", "desc"]}
							onRowClick={(row) => console.log(row)}
							onRowSelectionModelChange={(row) => console.log(row)}
							getRowId={(row) => row.id}
							// sortModel={[{field: "name", sort: "asc"}]}
							density="standard"
							initialState={{
								pagination: {
									paginationModel: {
										pageSize: 2
									}
								}
							}}
						/>
				</Container>
			</Box>
		</Container>
		</>
	);
}
